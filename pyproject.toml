[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py37", "py38", "py39"]
include = '\.pyi?$'

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.mypy]
disallow_untyped_defs = true
no_implicit_optional = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
check_untyped_defs = true
show_error_codes = true
ignore_missing_imports = true
disable_error_code = ["call-arg", "call-overload", "import", "var-annotated"]

[tool.poetry]
name = "REDCapRecordSynthesizer"
version = "0.3.0"
description = "Creates synthetic REDCap-like records for software testing."
authors = ["Kevin J. Delaney <kjdelaney@ucsd.edu>"]
readme = "README.md"

documentation = "https://github.com/DBMI/REDCapRecordSynthesizer"
homepage = "https://github.com/DBMI/REDCapRecordSynthesizer"
repository = "https://github.com/DBMI/REDCapRecordSynthesizer"

packages = [
    { include = "redcap_record_synthesizer", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.7.1,<4.0"
faker = "^15.3.4"
pandas = "1.3.5"

[tool.pylint.format]
max-line-length = "88"

[tool.pytest.ini_options]
addopts = """\
    --cov-report term-missing \
    --no-cov-on-fail \
"""
testpaths= ["redcap_record_synthesizer"]
